class Stack:
    def __init__(self):
        self.stack = []

    def push(self, item):
        self.stack.append(item)

    def pop(self):
        if self.is_empty():
            raise IndexError("Cannot pop from an empty stack")
        return self.stack.pop()

    def is_empty(self):
        return len(self.stack) == 0
stack = Stack()
print(stack.is_empty())  # Output: True

stack.push(1)
stack.push(2)
stack.push(3)

print(stack.pop())  # Output: 3
print(stack.pop())  # Output: 2

print(stack.is_empty())  # Output: False

print(stack.pop())  # Output: 1
print(stack.is_empty())  # Output: True

# Trying to pop from an empty stack will raise an IndexError
print(stack.pop())  # Raises: IndexError: Cannot pop from an empty stack


queue = Queue()
print(queue.is_empty())  # Output: True

queue.enqueue(1)
queue.enqueue(2)
queue.enqueue(3)

print(queue.dequeue())  # Output: 1
print(queue.dequeue())  # Output: 2

print(queue.is_empty())  # Output: False

print(queue.dequeue())  # Output: 3
print(queue.is_empty())  # Output: True

# Trying to dequeue from an empty queue will raise an IndexError
print(queue.dequeue())  # Raises: IndexError: Cannot dequeue from an empty queue
